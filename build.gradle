plugins {
    id 'java'
    id 'io.quarkus'
    id 'checkstyle'
    id 'com.google.protobuf' version '0.8.10'
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}") {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation group: 'io.quarkus', name: 'quarkus-resteasy-jsonb'
    implementation group: 'io.quarkus', name: 'quarkus-resteasy'
    implementation group: 'io.quarkus', name: 'quarkus-logging-json'
    implementation group: 'io.quarkus', name: 'quarkus-cache'
    implementation group: 'io.quarkus', name: 'quarkus-config-yaml'
    implementation group: 'io.quarkus', name: 'quarkus-kafka-streams'
    implementation group: 'io.quarkus', name: 'quarkus-kafka-client'
    implementation group: 'io.quarkus', name: 'quarkus-smallrye-health'
    implementation group: 'io.quarkus', name: 'quarkus-smallrye-metrics'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.5.0'
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '2.5.0'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.12.2'

    testImplementation group: 'io.quarkus', name: 'quarkus-junit5'
    testImplementation group: 'io.rest-assured', name: 'rest-assured'
    testImplementation group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.5.0'

}

group 'com.rhysmccaig'
version '1.0.0-SNAPSHOT'

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

protobuf {
    generatedFilesBaseDir = "$projectDir/build/generated"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }
}
project.configurations {
  //create("native-testCompileProtoPath")
  create("native-testCompile")
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/main/java']
        }
    }
}
